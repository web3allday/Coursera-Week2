{"ast":null,"code":"var _jsxFileName = \"/Users/rhenquadros/Desktop/Development/Coursera-Week2/assignment3/confusion/src/components/DishdetailComponent.js\";\nimport React, { Component } from 'react';\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Modal, ModalHeader, ModalBody, Button, Label, Col, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\nconst required = val => val && val.length;\n\nconst maxLength = len => val => !val || val.length <= len;\n\nconst minLength = len => val => val && val.length >= len;\n\nclass CommentForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalOpen: false\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  }\n\n  handleSubmit(values) {\n    console.log(\"Current State is: \" + JSON.stringify(values));\n    alert(\"Current State is: \" + JSON.stringify(values));\n    this.toggleModal();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Button, {\n      outline: true,\n      onClick: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"fa fa-pencil fa-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), \" Submit Comment\"), React.createElement(Modal, {\n      isOpen: this.state.isModalOpen,\n      toggle: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggleModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Submit Comment\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(LocalForm, {\n      onSubmit: values => this.handleSubmit(values),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"rating\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Rating\"), React.createElement(Control.select, {\n      model: \".rating\",\n      name: \"rating\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"1\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"2\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"3\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"4\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"5\")))), React.createElement(Row, {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"author\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Your Name\"), React.createElement(Control.text, {\n      model: \".author\",\n      id: \"author\",\n      name: \"author\",\n      placeholder: \"Your Name\",\n      className: \"form-control\",\n      validators: {\n        required,\n        minLength: minLength(3),\n        maxLength: maxLength(15)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".author\",\n      show: \"touched\",\n      messages: {\n        required: 'Required',\n        minLength: 'Must be greater than 2 characters',\n        maxLength: 'Must be 15 characters or less'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Label, {\n      htmlFor: \"comment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Comment\"), React.createElement(Control.textarea, {\n      model: \".comment\",\n      id: \"comment\",\n      name: \"comment\",\n      rows: \"6\",\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Submit\"))))))));\n  }\n\n}\n\nfunction RenderDish({\n  dish\n}) {\n  return React.createElement(\"div\", {\n    className: \"col-12 col-md-5 m-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(CardImg, {\n    top: true,\n    src: dish.image,\n    alt: dish.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(CardTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, dish.name), React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, dish.description))));\n}\n\nfunction RenderComments({\n  comments\n}) {\n  if (comments != null) {\n    return React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Comments\"), React.createElement(\"ul\", {\n      className: \"list-unstyled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, comments.map(comment => {\n      return React.createElement(\"li\", {\n        key: comment.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, comment.comment), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"-- \", comment.author, \" , \", new Intl.DateTimeFormat('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: '2-digit'\n      }).format(new Date(Date.parse(comment.date)))));\n    })), React.createElement(CommentForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    });\n  }\n}\n\nconst Dishdetail = props => {\n  if (props.dish != null) {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Breadcrumb, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(BreadcrumbItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Menu\")), React.createElement(BreadcrumbItem, {\n      active: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, props.dish.name)), React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, props.dish.name), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(RenderDish, {\n      dish: props.dish,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(RenderComments, {\n      comments: props.comments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    })));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    });\n  }\n};\n\nexport default Dishdetail;","map":{"version":3,"sources":["/Users/rhenquadros/Desktop/Development/Coursera-Week2/assignment3/confusion/src/components/DishdetailComponent.js"],"names":["React","Component","Card","CardImg","CardImgOverlay","CardText","CardBody","CardTitle","Breadcrumb","BreadcrumbItem","Modal","ModalHeader","ModalBody","Button","Label","Col","Row","Link","Control","LocalForm","Errors","required","val","length","maxLength","len","minLength","CommentForm","constructor","props","state","isModalOpen","toggleModal","bind","handleSubmit","setState","values","console","log","JSON","stringify","alert","render","RenderDish","dish","image","name","description","RenderComments","comments","map","comment","id","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","Dishdetail"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Modal, ModalHeader, ModalBody, Button, Label, Col, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => (val) && (val.length >= len);\n\nclass CommentForm extends Component {\n   \n   constructor(props) {\n      super(props);\n      \n      this.state = {\n         isModalOpen: false\n      }\n      \n      this.toggleModal = this.toggleModal.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n   }\n   \n   toggleModal() {\n      this.setState({ isModalOpen: !this.state.isModalOpen });\n   }\n   \n   handleSubmit(values) {\n      console.log(\"Current State is: \" + JSON.stringify(values));\n      alert(\"Current State is: \" + JSON.stringify(values));\n      this.toggleModal();\n   }\n   \n   render() {\n      return(\n         <div className=\"container\">\n            <div className=\"row\">\n               <Button outline onClick={this.toggleModal}>\n                  <span className=\"fa fa-pencil fa-lg\"></span> Submit Comment\n               </Button>\n                           \n               <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                  <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                  <ModalBody>\n                     <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                        <Row className=\"form-group\">\n                           <Col md={12}>\n                              <Label htmlFor=\"rating\">Rating</Label>\n                              <Control.select model=\".rating\" name=\"rating\" className=\"form-control\">\n                                 <option>1</option>\n                                 <option>2</option>\n                                 <option>3</option>\n                                 <option>4</option>\n                                 <option>5</option>\n                              </Control.select>\n                           </Col>                          \n                        </Row>\n                        <Row className=\"form-group\">\n                           <Col md={12}>\n                              <Label htmlFor=\"author\">Your Name</Label>\n                              <Control.text model=\".author\" id=\"author\" name=\"author\" placeholder=\"Your Name\" className=\"form-control\" \n                               validators={{\n                                  required, minLength: minLength(3), maxLength: maxLength(15)\n                               }}\n                              />    \n                              <Errors\n                                 className=\"text-danger\"\n                                 model=\".author\"\n                                 show=\"touched\"\n                                 messages={{\n                                    required: 'Required',\n                                    minLength: 'Must be greater than 2 characters',\n                                    maxLength: 'Must be 15 characters or less'\n                                 }}\n                              />                            \n                           </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                           <Col md={12}>\n                              <Label htmlFor=\"comment\">Comment</Label>\n                              <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\" rows=\"6\" className=\"form-control\" />                           \n                           </Col>\n                        </Row>\n                        <Row className=\"form-group\">\n                           <Col md={12}>\n                              <Button type=\"submit\" color=\"primary\">\n                                 Submit\n                              </Button>\n                           </Col>\n                        </Row>\n                     </LocalForm>\n                  </ModalBody>\n               </Modal>\n            </div>\n        </div>\n      );\n   }\n}\n\nfunction RenderDish({dish}) {\n   return (\n      <div className=\"col-12 col-md-5 m-1\">\n         <Card>\n            <CardImg top src={dish.image} alt={dish.name} />\n            <CardBody>\n               <CardTitle>{dish.name}</CardTitle>\n               <CardText>{dish.description}</CardText>\n            </CardBody>\n         </Card>\n      </div>\n   );\n}\n\nfunction RenderComments({comments}) {\n   if (comments != null) {\n      return (\n         <div className=\"col-12 col-md-5 m-1\">\n            <h4>Comments</h4>\n            <ul className=\"list-unstyled\">\n            {comments.map((comment) => {\n               return (\n                  <li key={comment.id}>\n                    <p>{comment.comment}</p>\n                    <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>                                     \n                  </li>\n               );\n            })}\n            </ul>\n            <CommentForm />\n         </div>\n      );\n   }\n   else {\n      return (\n         <div></div>\n      );\n   }\n}\n\nconst Dishdetail = (props) => {\n   if (props.dish != null) {\n      return (\n         <div className=\"container\">\n            <div className=\"row\">\n               <Breadcrumb>\n                  <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\n                  <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n               </Breadcrumb>\n               <div className=\"col-12\">\n                  <h3>{props.dish.name}</h3>\n                  <hr />\n               </div>\n            </div>\n            <div className=\"row\">\n               <RenderDish dish={props.dish} />\n               <RenderComments comments={props.comments} />\n            </div>\n         </div>\n      );\n   }\n   else {\n      return (\n         <div></div> \n      );\n   }\n}\n\nexport default Dishdetail;"]},"metadata":{},"sourceType":"module"}